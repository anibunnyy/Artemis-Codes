#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>

// Create an instance of the PCA9685 servo driver
Adafruit_PWMServoDriver pwm = Adafruit_PWMServoDriver();

// Define the servo pins on the PCA9685
#define SERVO1 0
#define SERVO2 1
#define SERVO3 2

// Define the minimum and maximum pulse lengths for the servos
#define SERVOMIN  0 // This is the 'minimum' pulse length count (out of 4096)
#define SERVOMAX 180  // This is the 'maximum' pulse length count (out of 4096)

void setup() {
  // Initialize the PCA9685 servo driver
  pwm.begin();
  pwm.setPWMFreq(50);  // Analog servos run at ~50 Hz updates

  // Move all servos to 0 degrees initially
  moveServo(SERVO1, 0);
  moveServo(SERVO2, 0);
  moveServo(SERVO3, 0);
  delay(1000);
}

void loop() {
  // Move servos from 0 to 180 degrees
  

  moveServo(SERVO1, 100); // Set to maximum speed in one direction
  delay(100);        //for processing issue
  moveServo(SERVO2, 100);
  delay(84);
  moveServo(SERVO1, 90);
  delay(100);        //for processing issue
  moveServo(SERVO2, 90); // Stop the servo
  delay(700); // Wait for a second
  

  // Move back to 0 degrees (simulate by rotating in the opposite direction)
  moveServo(SERVO1, 85); // Set to maximum speed in the opposite direction
  delay(100);        //for processing issue
  moveServo(SERVO2, 85);
  delay(84); // Wait for the duration to simulate returning to 0 degrees
  moveServo(SERVO1, 90);
  delay(100);        //for processing issue
  moveServo(SERVO2, 90);
  delay(700); // Wait for a second
}




// Function to move a servo to a specific angle
void moveServo(uint8_t servoNum, int angle) {
  int pulseLength = map(angle, 0, 180, SERVOMIN, SERVOMAX);
  pwm.setPWM(servoNum, 0, pulseLength);
}
